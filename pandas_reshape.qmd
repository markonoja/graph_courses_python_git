## Learning Objectives
- Understand what wide data format is and what long data format is.
- Learn how to reshape wide data to long data using melt().
- Learn how to reshape long data to wide data using pivot().

## Import packages


```{python}
import pandas as pd
import plotly.express as px
```

## Data

Run the code below to load and define the datasets to be used in this lesson.

```{python}
# Temperatures dataset
temperatures = pd.DataFrame(
    {
        "country": ["Sweden", "Denmark", "Norway"],
        "1994": [1, 2, 3],
        "1995": [3, 4, 5],
        "1996": [5, 6, 7],
    }
)

# Fuels Wide dataset
fuels_wide = pd.read_csv("oil_per_capita_wide.csv")

# Eurostat Births Wide dataset
euro_births_wide = pd.read_csv("euro_births_wide.csv")

# Contracts dataset
contracts = pd.read_csv("chicago_contracts_20_23.csv")

# Population dataset
population = pd.read_csv("tidyr_population.csv")
```

## What do Wide and Long mean

In the **wide dataset**, each observational unit (each product) occupies only one row, and each measurement (sales in Jan, Feb, Mar) is in a separate column.

In the **long dataset**, on the other hand, each observational unit (each product) occupies multiple rows, with one row for each measurement.

## Practice Q; wide or Long?

Consider the temperatures dataset created earlier:

```{python}

temperatures
```

Is this data in a wide or long format?

## When to Use Wide vs Long Data

Wide is better for Displaying information
Long is better for Analysis or Plotting

## From Wide to Long with `melt()`

```{python}
fuels_wide
```


```{python}
fuels_wide.melt([id_varse="Entity", "Code"]).sort_values(["Entity","variable"])
```

## Replacing the columns to make them more meaningful

```{python}
fuels_long = fuels_wide.melt([id_vars="Entity", "Code"], var_name="year", value_name="oil_consumption").sort_values(["Entity","variable"])
```


```{python}
fuels_long["year"] = fuels_long["year"].str.replace("y_", "").astype(int)
fuels_long
```


## Using Long Datta for Analysis


```{python}
fuels_wide
```


```{python}
fuels_long
```

Long data easy to extract statistics:
Wide data not so much

```{python}
#Average oil consumptio per country
fuels_long.groupby("Entity")["oil_consumption"].mean()
```

Long data is easier to plot.

```{python}
subset = fuels_long.query("Entity in ['Peru', 'Iran', 'China']")
```

## Plot the above

```{python}
px.line(subset, x="year", y="oil_consumption", color = "Entity")
```

## Fronm Long to Wide with pivot method

```{python}
# number of contracts per state per year
contracts_summary = contracts.groupby("state")["year"].value_counts().reset_index()

contracts_summary
```

```{python}
contracts_summary.pivot(columns="year", index="state",values="count").reset_index()
```
 
 
## Practice Q: Temperatures back to Wide
Convert the long temperatures_long dataset you created above back to a wide format. Your answer should have the following column names: “country”, “1994”, “1995”, and “1996”.


## Practice Q: Population to Wide
The population dataset shows the populations of 219 countries over time.

Reshape this data into a wide format.